<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_fireball</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///give it a creator so it want damage the creator
creator = noone;
knockback =10;
//this help prevents clipping
phy_bullet = true;


///create the fire
fire_particle = part_system_create();
//uncomment to set the depth
//part_system_depth(fire_particle,0);

particle = part_type_create();
part_type_shape(particle,pt_shape_flare);

//we can set the base X and Y scale values of the particle shape
part_type_scale(particle,1,1);
//we can set the base X and Y scale values of the particle shape
part_type_size(particle,0.10,0.15,-.001,0);

//create a color scale for the particle
part_type_color2(particle,c_red,c_orange);

//create some transparency
part_type_alpha2(particle,1,0.75);

//speed code
part_type_speed(particle,0.1,0.5,0,0);

//particle direction
part_type_direction(particle,0,270,0,0);

//apply gravity to the particle
part_type_gravity(particle,0.02,90);

//make the particle rotate
part_type_orientation(particle,0,359,10,0,true);
//particle life cycle
part_type_life(particle,100,150);
//add a blend affect
part_type_blend(particle,true);

//create an emmiter
emitter = part_emitter_create(particle);
//shape of particle
//part_emitter_region(rocket_first_particle, rocket_first_emitter, x-20, x+20, y-20, y+20, ps_shape_ellipse, ps_distr_gaussian);



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///destroy seld once alarm is done
instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///fire the particle

//stream emmiter
//part_emitter_stream(rocket_first_particle,rocket_first_emitter,fire_particle,1);
//Sets the region and distribution settings for the given emitter
 part_emitter_region(particle, emitter, x,x,y,y,0,0);
 part_emitter_burst(particle,emitter,fire_particle,5);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_wall">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///destroy self
instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_life_form_parent">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///damage other obj and calc knockback
if(other.id != creator){
    other.hp-=1;
 
        //apply the knockback
        var dir = point_direction(0,0,phy_speed_x,phy_speed_y);
        var xforce = lengthdir_x(knockback, dir);
        var yforce = lengthdir_y(knockback, dir);
        //targets the obj to be damaged
        with(other) {
        //This function applies an impulse to a position in the room with a strength defined by a vector
            physics_apply_impulse(x,y, xforce, yforce);
        }
        alarm[0] =1;
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>-1</PhysicsObject>
  <PhysicsObjectSensor>-1</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.100000001490116</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>12,12</point>
    <point>12,0</point>
  </PhysicsShapePoints>
</object>
