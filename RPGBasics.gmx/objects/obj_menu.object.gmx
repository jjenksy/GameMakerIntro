<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///init the menu
title = "Menu";
option[0] = "Items";
option[1] = "Equipment";
option[2] = "Status";


//menu index this is the option we are on
menu_index = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///alarm for the menu control
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Control the menu
if(alarm[0]&lt;=0){
 //check if downkey is pressed or controller is press down
    if(obj_input.down_key || obj_input.yaxis &gt; .5){
    //checking to see if the menu_index is less then the total length of the array
        if(menu_index&lt; array_length_1d(option)-1){
            menu_index++;
        }else{
            menu_index=0;
        }
        alarm[0]=room_speed/6;
        
    }
    //check if upkey is pressed or controller is pressed up
     if(obj_input.up_key || obj_input.yaxis &lt; -.5){
        if(menu_index&gt; 0){
        menu_index--;
     
        
        }else{
        //loop back around
        menu_index= array_length_1d(option)-1;
        }
        
         alarm[0]=room_speed/6;
     }
     if(obj_input.dash_key){
        switch(menu_index){
        
            case 0:
                  show_message("Case 0");
                break;
            case 1:
                show_message("Case 1");
                break;
            case 2:
                 show_message("Case 2");
                break;
            default:
                break;
                
                }
    
                //so we dont dash when we return
        obj_input.dash_key=false;
     }
    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///draw the menu
var xx = display_get_gui_width()/2;
var yy = display_get_gui_height()/2;

draw_set_halign(fa_center);

draw_text(xx, yy-64,title);

//loops through the array and draws the text
for(var i = 0; i&lt;=array_length_1d(option)-1;i++){
//draw menu as gray
    draw_set_colour(c_gray);
    if(i==menu_index){
    //draw select as white
        draw_set_colour(c_white);
    }
    draw_text(xx,yy+(i*32) , option[i]);
}
draw_set_colour(c_white);
draw_set_halign(fa_left);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
