<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_chinlin_stand_right</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_life_form_parent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Init the chinlin
//inherit events from parent
event_inherited();
image_speed = .2;
spd = 1.5;
//enemy ai...kinda
state = scr_enemy_idle_state;
alarm[0] = room_speed*irandom_range(2,5);
sight = 64;
//axis to move to new axis AI movement system
xaxis = 0;
yaxis = 0;
//set the initial movement
movement = IDLE;
//init facing position
face =RIGHT;

//movement control for sprites
//two dimensional array grid system for sprite movement
sprite[RIGHT,MOVE] = spr_chinlin_run_right;
sprite[UP,MOVE] = spr_chinlin_run_up;
//have the code mirror the sprite to create the left movement
sprite[LEFT,MOVE] = spr_chinlin_run_right;
sprite[DOWN,MOVE] = spr_chinlin_run_down;
//attack todo add an attack state for enemy
sprite[RIGHT,ATTACK] = spr_chinlin_run_right;
sprite[UP,ATTACK] = spr_chinlin_run_right;
sprite[LEFT,ATTACK] = spr_chinlin_run_right;
sprite[DOWN,ATTACK] = spr_chinlin_run_right;
//idle
sprite[RIGHT,IDLE] = spr_chinlin_stand_right;
sprite[UP,IDLE] = spr_chinlin_stand_up;
//have the code mirror the sprite to create the left movement
sprite[LEFT,IDLE] = spr_chinlin_stand_right;
sprite[DOWN,IDLE] = spr_chinlin_stand_down;



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Drop expr point
instance_create(x,y,obj_expr);
audio_play_sound(snd_enemy_die,5,false);

//drop random health pack
if(scr_chance(.5)){
    //creat the health drop in a random area around the slime
    //hopefullt doesnt cover the experience up
    instance_create(x+random_range(-6,6), y+random_range(-6,6), obj_health);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Stall Alarm
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Wander alarm
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///run the current state

//check to see if the player is in the room first
event_inherited();

//run the chase state
script_execute(state);
sprite_index = sprite[face , movement];
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_player">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Damage the player
if(state != scr_enemy_stall_state){
    //get the direction from the player to self
    var dir = point_direction(other.x, other.y, x,y);
    //offset for the damage object
    var xdir = lengthdir_x(1,dir);
    var ydir = lengthdir_y(1,dir);
    //create the damage object on player with offset
    var damage = instance_create(other.x+xdir, other.y+ydir, obj_damage);
     //tell the damage obgect who created it
     damage.creator = id; //the current obj's id
     damage.knockback =5;
     state = scr_enemy_stall_state;
     alarm[1] = room_speed;

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>-1</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>1</PhysicsObjectShape>
  <PhysicsObjectDensity>0.300000011920929</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>5</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>4,12</point>
    <point>20,12</point>
    <point>20,24</point>
    <point>4,24</point>
  </PhysicsShapePoints>
</object>
