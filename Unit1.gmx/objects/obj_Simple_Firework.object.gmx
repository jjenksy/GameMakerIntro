<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///INITIALISE PARTICLE SYSTEM

//Create the particle system
Sname = part_system_create();

//create the trail particle
trail = part_type_create();
part_type_shape(trail, pt_shape_spark);                     //Use a "spark" built in shape
part_type_size(trail, 0.20, 0.50, 0, 0);                    //Set a random size from 20% up to 50% of the original particle scale
part_type_scale(trail, 1, 1);                               //Scale at 1:1
part_type_color2(trail, c_white, c_gray);                   //Set the color to fade from white to grey
part_type_alpha2(trail, 1, 0);                              //Set the alpha to fade from 1 (opaque) to 0 (transparent)
part_type_speed(trail, 2, 5, -0.20, 0);                     //Choose a random speed from 2 to 5 and then reduce it by 0.2pixels-per-step
part_type_direction(trail, 0, 359, 0, 0);                   //Choose a random direction for each particle created
part_type_gravity(trail, 0.5, 270);                         //Gravity is set to 0.5 and down (so the particles fall)
part_type_orientation(trail, 0, 359, 0, 0, 0);              //Each particle will have a random "image angle" when created
part_type_blend(trail, 0);                                  //Additive blending is off
part_type_life(trail, 8, 30);                               //The particle life is between 8 and 30 steps

//Create the firework itself
stars = part_type_create();
part_type_shape(stars, pt_shape_star);                      //Use a "star" built in shape
part_type_size(stars, 0.5, 1, -0.02, 0);                      //Set a random size from 50% up to 100% of the original particle scale
part_type_scale(stars, 1, 1);                               //Scale at 1:1
part_type_color3(stars, c_lime, c_fuchsia, c_blue);         //Set a three color gradient that will blend from one the other over the lifetime of the particle
part_type_alpha3(stars, 0, 1, 0);                           //Set the alpha to be transparent, opaque and then transparent over the particle lifetime
part_type_speed(stars, 2, 3, 0, 0);                         //Choose a random speed from 2 to 3 pixels per step
part_type_direction(stars, 0, 359, 0, 0);                   //Choose a random direction for all particles created
part_type_gravity(stars, 0.20, 270);                        //Set the gravity to pull down
part_type_orientation(stars, 0, 359, 0, 0, 0);              //Give the star sprites a random "image angle"
part_type_blend(stars, 1);                                  //Use additive blending (makes them brilliant when they overlap)
part_type_life(stars, 50, 70);                              //Give them a lifetime between 50 and 70 steps

//Set the direction so that it moves towards the center of the screen
direction = point_direction(x, y, room_width / 2, 100);
//Set a random speed
speed = 15 + random(5);
//Set gravity so that it curves
gravity = 0.5;
//Set the gravity direction (down)
gravity_direction = 270;
//Set the trail alarm
alarm[0] = 1;
//Set the explode alarm
alarm[1] = room_speed;







</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///CLEAN UP ALARM

//Check the system to see if any particles exist
if part_particles_count(Sname) &gt; 0
{
//Particles are still about so repeat the alarm
alarm[2] = 1;
}
else
{
//This is VERY IMPORTANT as failure to remove systems, emitters or particles when no longer needed acn give memory leaks and crash the game
//Destroy the particles
part_type_destroy(trail);
part_type_destroy(stars);
//Destroy the system
part_system_destroy(Sname);
//No particles are about, so destroy the instance
instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///FIREWORK ALARM

//Stop the trail alarm
alarm[0] = -1;
//Burst out loads of nice star particles!!!
part_particles_create(Sname, x, y, stars, 200);
//Set the last alarm to destroy the instance
alarm[2] = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///TRAIL ALARM

//Lets create some particles in the simplest way possible
part_particles_create(Sname, x, y, trail, 1);
alarm[0] = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
